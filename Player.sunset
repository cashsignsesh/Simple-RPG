acknowledge Class as int

public constant Class Mage becomes 0
public constant Class Bard becomes 1
public constant Class Rogue becomes 2
public constant Class Warrior becomes 3

public Class class
public int level becomes 1
public int statPoints becomes 30 ; Increase this by 3 for level's every multiple of 10. For every multiple of 1, increase by 1.

public int damage becomes 1
public int speed becomes 1
public int critDmg becomes 33
public int health becomes 10
public int intellect becomes 1
public int currentHealth becomes health
public int critRate becomes 5 ; every critRate amount of hits will be a crit
public int hitRotation becomes 1
pullable int exp
pullable int expTillNextLvl becomes 10
public int attackCd
public int apples becomes 3
public int gold becomes 500000
public bool hasChemistryBook becomes false
public bool breastplateEquipped becomes false ; +33% Hp
public bool shinguardEquipped becomes false
public bool helmetEquipped becomes false
public bool ar15Equipped becomes false
public bool hasTrophyCase becomes false
public int enemiesKilled
public int ar15Cd becomes 0
public bool hasBlessing becomes false
public bool hasBlindness becomes false
public bool hasCrucify becomes false
public bool hasRebirth becomes false

pullable str sprite becomes "Player.bmp"

public func getClassStr str {
	
	switch (class) {
		case(Mage):
			retn("Mage")
			break
		case(Rogue):
			retn("Rogue")
			break
		case(Bard):
			retn("Bard")
			break
		case(Warrior):
			retn("Warrior")
			break
		default:
			retn("Illusionist")
			break
	}
	
}

public func(int xp) addExp {
	
	; add xp to exp..
	; if exp>=expTillNextLvl:
	;  calculate new expTillNextLvl ...
	;  set exp to exp-expTillNextLvl ...
	;  increase level by 1 ...
	;  set skillPoints and statPoints ...
	
	exp becomes exp+xp
	if (exp,>=,expTillNextLvl) {
		exp becomes exp-expTillNextLvl
		++level
		if (level%10,=,0) { statPoints becomes statPoints+3 }
		else { ++statPoints }
		expTillNextLvl becomes (level*level)+10
	}
	
	
}

public func consumeApple bool {
	if (apples,=,0) { retn(false) }
	apples becomes apples-1
	if (hasChemistryBook) { currentHealth becomes currentHealth+((health/3)*2) }
	else { currentHealth becomes currentHealth+health/3 }
	if (currentHealth,>,health) { currentHealth becomes health }
	retn(true)
}
